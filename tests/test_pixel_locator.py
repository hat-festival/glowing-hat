from unittest import TestCase

from lib.pixel_locator import PixelLocator


class TestPixelLocator(TestCase):
    """Test the PixelLocator."""

    def test_gather_json(self):
        """Test it collects the data."""
        ploc = PixelLocator(720, data_root="tests/fixtures/analysis")
        ploc.gather_json()
        self.assertEqual(
            ploc.raw_data,
            {
                "back": {
                    "00": {"x": 373, "y": 391},
                    "01": {"x": 176, "y": 220},
                    "05": {"x": 627, "y": 143},
                    "06": {"x": 549, "y": 176},
                    "07": {"x": 224, "y": 131},
                    "13": {"x": 545, "y": 76},
                    "14": {"x": 273, "y": 49},
                    "19": {"x": 306, "y": 31},
                },
                "front": {
                    "03": {"x": 445, "y": 38},
                    "04": {"x": 193, "y": 97},
                    "09": {"x": 615, "y": 281},
                    "10": {"x": 332, "y": 296},
                    "11": {"x": 111, "y": 293},
                    "16": {"x": 570, "y": 223},
                    "17": {"x": 252, "y": 117},
                },
                "left": {
                    "01": {"x": 661, "y": 177},
                    "02": {"x": 396, "y": 54},
                    "03": {"x": 191, "y": 86},
                    "07": {"x": 643, "y": 116},
                    "08": {"x": 454, "y": 204},
                    "09": {"x": 155, "y": 284},
                    "14": {"x": 540, "y": 33},
                    "15": {"x": 359, "y": 140},
                    "16": {"x": 127, "y": 236},
                    "19": {"x": 479, "y": 11},
                },
                "right": {
                    "00": {"x": 93, "y": 340},
                    "04": {"x": 555, "y": 72},
                    "05": {"x": 287, "y": 157},
                    "06": {"x": 112, "y": 246},
                    "11": {"x": 626, "y": 271},
                    "12": {"x": 295, "y": 297},
                    "13": {"x": 162, "y": 149},
                    "17": {"x": 658, "y": 136},
                    "18": {"x": 448, "y": 19},
                },
            },
        )

    def test_consolidate(self):
        """Test it consolidates the data."""
        ploc = PixelLocator(720, data_root="tests/fixtures/analysis", lights=20)
        ploc.gather_json()
        ploc.consolidate()
        self.assertEqual(
            ploc.consolidated_data,
            {
                "00": {"x": [347], "y": [391, 340], "z": [93]},
                "01": {"x": [544], "y": [220, 177], "z": [59]},
                "02": {"x": [], "y": [54], "z": [324]},
                "03": {"x": [445], "y": [38, 86], "z": [529]},
                "04": {"x": [193], "y": [97, 72], "z": [555]},
                "05": {"x": [93], "y": [143, 157], "z": [287]},
                "06": {"x": [171], "y": [176, 246], "z": [112]},
                "07": {"x": [496], "y": [131, 116], "z": [77]},
                "08": {"x": [], "y": [204], "z": [266]},
                "09": {"x": [615], "y": [281, 284], "z": [565]},
                "10": {"x": [332], "y": [296], "z": []},
                "11": {"x": [111], "y": [293, 271], "z": [626]},
                "12": {"x": [], "y": [297], "z": [295]},
                "13": {"x": [175], "y": [76, 149], "z": [162]},
                "14": {"x": [447], "y": [49, 33], "z": [180]},
                "15": {"x": [], "y": [140], "z": [361]},
                "16": {"x": [570], "y": [223, 236], "z": [593]},
                "17": {"x": [252], "y": [117, 136], "z": [658]},
                "18": {"x": [], "y": [19], "z": [448]},
                "19": {"x": [414], "y": [31, 11], "z": [241]},
            },
        )
